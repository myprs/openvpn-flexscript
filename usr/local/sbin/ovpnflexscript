#!/bin/sh


DEBUG=${DEBUG:-0}


usage ()  {

echo "usage: $CALLNAME [-c CONFIGFILE] [-l LOGNAME] "


}


logmessage () {

	# log message
	logger -t "$LOGNAME" "$1"

	# if interactive then write message on stdout
	[ -t 0 ] && echo "\n$1"

	# if return value not zero then exit with return value
	[ $2 -ne 0 ] && exit $2

}


getcheckenvironment () {

	# check if variable dev is set and makes sense
	[ -z "$dev" ] && logmessage "ERROR: variable \"dev\" not set. This script should only called by openvpn. Aborting!" 2
	ip link show "$dev" >/dev/null 2>&1 ; [ $? -ne 0 ] && logmessage "ERROR: Interface \"$dev\" does not exist. Aborting!" 3
	ip tuntap show | grep -E "^$dev: .*" >/dev/null ; [ $? -ne 0 ] && logmessage "ERROR: Interface \"$dev\" is not a tun/tap device. Aborting!" 4


	# read config
	CONFIGBASE="/etc/ovpnflex"
	CONFIG=${CONFIG:-"/$CONFIGBASE/$dev/ovpnflex.conf"}
	[ $DEBUG -ge 4 ] && echo "DEBUG4: CONFIG set to \"$CONFIG\""


	[ -f "$CONFIG" ] || logmessage "ERROR: Config file \"$CONFIG\" not found. Aborting!" 5
	[ -r "$CONFIG" ] || logmessage "ERROR: Config file \"$CONFIG\" not readable. Aborting!" 6

	. "$CONFIG"

	# set own environment
	TMPFILE="$1"

	## we already have set CONFIG
	STAGE0USER=${STAGE0USER:-"nobody"}
	STAGE1USER=${STAGE1USER:-"openvpn"}

	DEF_LOGNAME="ovpnflexscript"
	LOGNAME=${LOGNAME:-"$DEF_LOGNAME"}

	MAPDEV2LOGNAME=${MAPDEV2LOGNAME:-0}

	# check environment (-> man openvpn)

	## check STAGE0USER
	# nobody has no rights to query the databases
	if [ "$USER" != "nobody" ] ; 
	then
		getent passwd "$STAGE0USER" >/dev/null ; [ $? -eq 0 ] || logmessage "ERROR: User \"$STAGE0USER\" in variable STAGE0USER does not exist. Aborting!" 7

		## check STAGE1USER
		getent passwd "$STAGE1USER" >/dev/null ; [ $? -eq 0 ] || logmessage "ERROR: User \"$STAGE1USER\" in variable STAGE1USER does not exist. Aborting!" 8
	fi

	# check MAPDEV2LOGNAME
	if [ $MAPDEV2LOGNAME -eq 1 ] ;
	then 
		if [ "$LOGNAME" = "$DEF_LOGNAME" ] ;
		then
			logmessage "ERROR: MAPDEV2LOGNAME = 1 needs LOGNAME to be set differently from default \"$DEF_LOGNAME\". Aborting!" 9
		else
			[ -L "$CONFIGBASE/$LOGNAME"  ] || ln -s "$CONFIGBASE/$dev" "$CONFIGBASE/$LOGNAME"
		fi
	fi

}



#####################################################
#####################################################


CALLNAME=`basename "$0"`
CALLPATH=`dirname "$0"`




# get commandline options

OPTRSTRING="c:l:"

while getopts "$OPTRSTRING" NEXTOPT ;
 do
        #echo "NEXTOPT:$NEXTOPT"
        #echo "OPTARG:$OPTARG"

        case $NEXTOPT in  
                "c")
			[ -n "$CONFIG" ] && logmessage "ERROR: Parameter -c must only be used once!. Aborting!" 1
                        CONFIG="$OPTARG"
                        ;;
                "l")
			[ -n "$LOGNAME" ] && logmessage "ERROR: Parameter -l must only be used once!. Aborting!" 1
                        LOGNAME="$OPTARG"
                        ;;
                *)
                        usage
                        exit 1
                        ;;
        esac
 done

#echo $OPTIND
shift $(( $OPTIND-1 ))

getcheckenvironment "$1"

# select stage
[ $DEBUG -ge 4 ] && echo "DEBUG4: USER is \"$USER\""

set -xv

case "$USER" in
	"$STAGE0USER")
		touch "$TMPFILE" || logmessage "ERROR: Could not create temporary file \"$TMPFILE\". Aborting!" 10
		sudo -u "$STAGE1USER" -E "$CALLPATH/$CALLNAME" "$TMPFILE" >"$TMPFILE"
		RETVAL=$?
		[ $RETVAL -ne 0 ] && rm "$TMPFILE"
		exit $RETVAL
		;;
	"$STAGE1USER")
		echo "tobedone: stage1"
		echo "testoutput " 
		;;
	"root")
		echo "tobedone: stage2"
		;;
	*)	
		logmessage "ERROR: User \"$USER\" is not assigned to any stage. Aborting!" 50
		;;
esac
